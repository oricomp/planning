#+title: OriComp Planning Archive
#+auto_tangle: nil

* Archive
** DONE [2/2] Refile Done Tasks
:PROPERTIES:
:ID:       87b6cf5b-b6bc-4bf9-9925-76ada0285402
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-25 Sun 17:22]
- State "PROG"       from "NEXT"       [2024-08-25 Sun 17:21]
- State "NEXT"       from "TODO"       [2024-08-22 Thu 21:48]
- State "TODO"       from              [2024-08-21 Wed 22:35]
:END:

Refile done tasks so that they are not all just in this one file.

*** DONE Come Up With System for Refiling
:PROPERTIES:
:ID:       71df1228-5893-4dda-a839-6650e8c07305
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-25 Sun 17:21] \\
  Done tasks (at the top level) are refiled to done.org/Archive
- State "PROG"       from "NEXT"       [2024-08-25 Sun 17:21]
- State "NEXT"       from "TODO"       [2024-08-22 Thu 21:51]
- State "TODO"       from              [2024-08-21 Wed 22:35]
:END:

Should be simple and straight-forward. Don't have to wait till toplevel task is done
in order to refile it (but maintain parent-child relationship) (maybe automatically
link parents and children)

*** CANC Automatically Refile Done Tasks
:PROPERTIES:
:ID:       2805bc17-ac58-4e8a-a406-2bbb9a3a6d96
:END:
:LOGBOOK:
- State "CANC"       from "NEXT"       [2024-08-25 Sun 17:21] \\
  Automatic refiling is not necessary because only the top-level tasks
  are refiled, and I do not mind refiling those tasks (they should not
  occur often).
- State "NEXT"       from "TODO"       [2024-08-22 Thu 21:51]
- State "TODO"       from "NEXT"       [2024-08-21 Wed 22:36]
- State "NEXT"       from "TODO"       [2024-08-21 Wed 21:22]
- State "TODO"       from              [2024-08-20 Tue 21:26]
:END:

This should only happen at the highest level.
** DONE [5/5] Initial Documentation
:PROPERTIES:
:ID:       aded0478-46fd-4189-ab77-c1d541b22839
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-28 Wed 22:42]
- State "PROG"       from "TODO"       [2024-08-20 Tue 21:24]
- State "TODO"       from              [2024-08-20 Tue 18:20]
:END:

*** DONE [2/2] Finalize Planning Procedure
:PROPERTIES:
:ID:       d5bc8d58-8f64-4d9c-9ecf-2888e30defd0
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-24 Sat 23:05]
- State "PROG"       from "TODO"       [2024-08-20 Tue 21:24]
- State "TODO"       from              [2024-08-20 Tue 18:20]
:END:

Finalize the procedure that will be used for planning from now on.

**** DONE Research Workflows
:PROPERTIES:
:ID:       0f32ca27-c149-4225-9cfe-30646da94843
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-20 Tue 21:03]
- State "PROG"       from "TODO"       [2024-08-20 Tue 18:13]
- State "TODO"       from              [2024-08-20 Tue 18:10]
:END:

Look into how others do their workflows to get inspiration for own workflow.

**** DONE [5/5] Write Elisp for Workflow
:PROPERTIES:
:ID:       f7aafeab-44e9-45c3-aac6-d3256d33a96f
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-24 Sat 23:05]
- State "PROG"       from "NEXT"       [2024-08-20 Tue 21:03]
- State "NEXT"       from              [2024-08-20 Tue 18:13]
:END:

Customize Emacs for use with chosen workflow

***** DONE Automatically Add Statistics Cookies
:PROPERTIES:
:ID:       e23145f3-e39f-44eb-b4b2-111a4f8bafc8
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-21 Wed 21:25] \\
  Done in personal doomemacs config
- State "PROG"       from "TODO"       [2024-08-21 Wed 19:35]
- State "TODO"       from "PROG"       [2024-08-21 Wed 16:52]
- State "PROG"       from "TODO"       [2024-08-20 Tue 22:03]
- State "TODO"       from              [2024-08-20 Tue 21:24]
:END:

Add ~[/]~ to all headings with children on save.

***** DONE Org Agenda - Show TODOs in Tree View
:PROPERTIES:
:ID:       a276cf6e-902a-4978-9da1-baa1aa4c59fc
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-22 Thu 21:48] \\
  Done in personal config. Just modified ~org-agenda-prefix-format~ to what I wanted
- State "PROG"       from "NEXT"       [2024-08-21 Wed 21:29]
- State "NEXT"       from "TODO"       [2024-08-21 Wed 21:22]
- State "TODO"       from              [2024-08-20 Tue 21:25]
:END:

Sub-Tasks/Headings are indented

***** CANC Automatically Mark Task as Done Once Children are Done
:PROPERTIES:
:ID:       d6c85c91-32ca-4c36-80e7-671bfbc19ccf
:END:
:LOGBOOK:
- State "CANC"       from "PROG"       [2024-08-24 Sat 23:04] \\
  Automarking parent as done ended up interfering with logging messages.
  It is not necessary, so is abandoned.
- State "PROG"       from "NEXT"       [2024-08-22 Thu 21:49]
- State "NEXT"       from "TODO"       [2024-08-21 Wed 21:22]
- State "TODO"       from              [2024-08-20 Tue 21:28]
:END:

Maybe also mark all parents (recursive) as PROG when task marked as PROG?

***** DONE Update Todo Faces
:PROPERTIES:
:ID:       98bb1712-8fba-404f-bd3d-1d0566ae1d04
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-21 Wed 19:35] \\
  Work done in private doomemacs configuration
- State "PROG"       from "TODO"       [2024-08-21 Wed 18:37]
- State "TODO"       from              [2024-08-20 Tue 21:29]
:END:

Update the ~org-todo-keyword-faces~ variable to reflect new keywords.

***** DONE Look Into Special Properties
:PROPERTIES:
:ID:       2a5c83dc-1331-4266-9c6f-2161a8c08f6f
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-21 Wed 17:01]
- State "PROG"       from "TODO"       [2024-08-21 Wed 16:55]
- State "TODO"       from              [2024-08-20 Tue 21:31]
:END:

[[https://orgmode.org/manual/Special-Properties.html][Special Properties]]

*** CANC Release Procedure
:PROPERTIES:
:ID:       9601b3bc-5c4e-4235-8a63-6ec89b12e7c3
:END:
:LOGBOOK:
- State "CANC"       from "PROG"       [2024-08-27 Tue 23:01] \\
  This should ideally be done once a release has actually been made
- State "PROG"       from "NEXT"       [2024-08-27 Tue 18:29]
- State "NEXT"       from "TODO"       [2024-08-25 Sun 17:23]
- State "TODO"       from              [2024-08-20 Tue 18:16]
:END:

What needs to be done for each release.

*** DONE Planning Procedure
:PROPERTIES:
:ID:       cdfbdfd6-5701-4ab8-aa77-eab45152d0fe
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-27 Tue 17:54] \\
  Added README.org to this repo
- State "PROG"       from "NEXT"       [2024-08-26 Mon 21:23]
- State "NEXT"       from "TODO"       [2024-08-20 Tue 21:03]
- State "TODO"       from              [2024-08-20 Tue 18:18]
:END:

How to use this stuff to do planning for future projects, etc. How does the workflow
work?

*** DONE OriComp Repo
:PROPERTIES:
:ID:       d2c3d49b-a647-49fc-8ccc-9588e7b70d18
:END:
:LOGBOOK:
- State "DONE"       from "PROG"       [2024-08-27 Tue 18:28]
- State "PROG"       from "NEXT"       [2024-08-27 Tue 17:57]
- State "NEXT"       from "TODO"       [2024-08-25 Sun 17:23]
- State "TODO"       from              [2024-08-20 Tue 18:18]
:END:

Add README to the main *OriComp* repo. This should go over each submodule.

*** CANC Documentation Generation
:PROPERTIES:
:ID:       927762c7-3993-4f13-ae09-d4562043dfd8
:END:
:LOGBOOK:
- State "CANC"       from "PROG"       [2024-08-28 Wed 22:41] \\
  It is too early in the project to start creating tools for documentation.
  This can be added at a later date when the use-case is better understood.
- State "PROG"       from "NEXT"       [2024-08-27 Tue 23:02]
- State "NEXT"       from "TODO"       [2024-08-27 Tue 17:57]
- State "TODO"       from              [2024-08-20 Tue 18:18]
:END:

A script (start in Python) that can be used to auto-generate documentation.

For example, can embed data that comes from a yaml file

#+begin_example
Writing something and want to embed a bit of data from a yaml file (maybe it is the release
version) #+begin_comment yaml_file_name.outer_value_in_dict.maybe_a_list_now[0].version
#+end_comment and then continue writing documentation.
#+end_example

This would get exported as

#+begin_example
Writing something and want to embed a bit of data from a yaml file (maybe it is the release
version) v0.0.1 #+begin_comment yaml_file_name.outer_value_in_dict.maybe_a_list_now[0].version
#+end_comment and then continue writing documentation.
#+end_example

Or something similar to this (probably needs some rework).

Also capable of exporting html/pdf with all links to other docs handled correctly (some way of specifying link is for documentation).
